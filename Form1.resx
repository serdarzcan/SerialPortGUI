<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="rightArrow.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rightArrow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAvlJREFUeF7l
        m0+ITlEYxr8kSdIkyUIWstAkWUgWFpJkIcnS2lpWkmxkIQtJFrKwsJKlLKWUrGQhWVhIkqZJkiRpEr+3
        nq9up2vmzv3On/fc+9RvMd+f8z7P28zcc889Z9JFR54tXYPN+nF8IvwCfIbjemlcIvgi/IU/cBc26q1x
        iMBf1IAp7+GQ3h6+CPu1EX6K/TZch3X62HBFyG8K3cZr2KuPDlME/N4I3MZvuABr9ZVhiWA/FHQlnsNO
        fW04IlTXBhj22bP66jCkUG1hl+MxbNMQdYsgPxvBVoNdPk9rmHpFiF+NUH24D5s0XH3C/KwNMD7AYQ1Z
        lzAeowGGTZ5uwHoNXYcwbNf5tkB9eQP7NLx/YTZ2Awwb8yL4nzzJbFuIGPifPGEwZQMM35MnzC01zKbk
        EWxVWT/CVK4GGLb4clKlfQhDORsw5R74mDxhpEQDDB8rT5go1QDDatuqdLmVJ5loM5eTV7BHlvKKwh4a
        YNiU/DyskbU8oqDN4dsMleIp7JC99AqKe8EWas/IYloFhb3xANI+tgsKeuQTHJXd+AqKecX+T92E+GsN
        jSI1EP9BTVCgBuJeLhsD14Ldvl+GUTbgHRyQ9TgKCngmzd6FoIhHbA3hhOzGV1DMG+lXkYKCXsi3jkgh
        bzdDL2CX7KUXxbzcDtvl7RLkfZZAQQ8NeAv7ZSmvKFyyAfbndws2yE5+UbxUA+wu75hslBMmSjQg/X1+
        V2EkZwNsT2KelZ6uwlCuBjyB7SrrR5hK/XDU9iCdg7yrvV2FsZQNsPX+eZXyKQymaID9WV0F/3uNMRm7
        AXbPflDD+xdmY26SugPlJjV9hOEYDaj3xAnGZ23AQ9ii4eoT5vtulc33+CqlCNFns7RNavI9wEwpgqym
        Ab4nNX1EmK4NeAm79bXhiFArHZmxSc0VGOYBKoItd2gq/oMIbyLg/47N3Ya6JjV9RMjw4ORHSPc83psI
        Oz06a9jpjzm9NQ4R2A5PWxNO6aVxieC288LfJuaZNZn8Ax232jrZLdyHAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="leftArrow.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="leftArrow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAwtJREFUeF7lmzFoVEEQhg8REREREbEQC7EQEbEQsbAQEbEQEUtra7ESERuxCBYS
        xEIsLKzEUixFEMRKLEQsLEREREIIQUII4Qj6DcyDQc67d3v7dmf3/fAVl7vb+f8hcPN23xvUqDNvhntg
        Xl/2SwS/BAvwS//UDxF4JzyFP8qCvlW/CHsWvpvwwqK+Xa8IuQ0ewoaGtizpx+oUAU/AFxP4X5b1o3WJ
        YFvgDgw16P/4rV+pR4Q6BO9NyHGs6NfKF2E2wTVY1XBtqKMBBNkPr0ywtpTfAEJcgWUTahpWdZnyhPnd
        8NyECWFNlytLGD8PP02QUMpqAIZlqHkEo4aaEMppAGZPwrihJoR1Xd6vMClDzV2YNNSE4LsBGDwMH4zh
        2PhsAMZChpoQ/DUAU/sgZKgJYahlfQhDMtQsGYNd46MBGNkFz4yxVORvACbOwQ9jKiX5GkBxGWoeQKyh
        JoQ8DaDwcfhsjOQibQMouBluwboayE26BlDsILwzxT2wofa6FYWuwoop7Aa12I0oIMdPL2xBb6jV+GLx
        CyDHTyMLe0HtxhOLbofHtohn1HYcseCkgwh3qPXZxEJy9XYbvPy8tUYjzCYWkgZch7Vm4VLQCHHEgkfh
        oy3gHbUeTyy6FeYh54zfGrUdXywu5/G5rvJao3a7EQVyXee3Rq12KwrNcnzVKWqxe1FMDjBf2+IOSHMx
        1IiC3n4us22IHIEu9/vbknVLTE585sSEmslBvgY0wsQp+GpMpSR/A0QY2QFPjLFU+GhAIwxdhJR7CL4a
        IMJUyl0kfw1ohLkU+4juj8cPwFtjODZF3CAhZwk3xayajon/BjTC7DH4ZMzHoJwGiDAsew33oX83SVlh
        /DR8M0FCKbMBIszL8GSf/gih3AY0IsRlWDShpqHcW2WtCLIXXppgbanndnkRgaYdnupqgIhQ0wxP9TVA
        RDAZnm7ApOGpvkdmrAg46aCmzoemrAgpO0/3oH+PzVkRdtTOU/0PTloRuLl3oflv6M+js1YEb5446dfD
        01aEl2O7OX05RoPBX2hp2jrHNJjuAAAAAElFTkSuQmCC
</value>
  </data>
</root>